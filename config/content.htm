<h1><span style="color: #626262;">簡介</span></h1><p>四設計二甲 何立翔 40623141</p><p>倉儲：<a href="https://github.com/mdecadp2018/site-40623141">https://github.com/mdecadp2018/site-40623141</a></p><p>網站：<a href="https://mdecadp2018.github.io/site-40623141/content/" rel="nofollow">https://mdecadp2018.github.io/site-40623141/content/</a></p><p>簡報：<a href="https://mdecadp2018.github.io/site-40623141/reveal/" rel="nofollow">https://mdecadp2018.github.io/site-40623141/reveal/</a></p><p></p><h1>手足球程式</h1><p>程式利用<span>python</span>的<span>keyboard mudule</span>來配和按鍵控制</p><p>所使用的是<span>keyboard.is_pressed</span>，如果按下鍵，則返回<span>True</span>。</p><p>程式開始前需先再小黑窗輸入</p><pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">pip install keyboard</pre><p><span>要將python再vrep裡運行可以參考 <span style="color: #0000ff;"><a href="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/content/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Python%20Remote%20API.html" style="color: #0000ff;">這裡</a></span></span></p><p>程式裡會使用到&nbsp; <span style="color: #0000ff;"><a href="http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm" style="color: #0000ff;">Remote API&nbsp;functions (Python)</a></span></p><h2>玩家vs玩家</h2><p>使用keyboard.is_pressed，如果按下鍵，則返回True</p><p>原程式為</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">try:            if keyboard.is_pressed('o'):                 vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('p'):                  vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('y'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0.05,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('u'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('i'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,-0.05,vrep.simx_opmode_oneshot_wait)            else:                pass        except:            break </pre><p>加以修改後，取消了暫停鍵('u')</p><p>使程式按下左右鍵時移動，而放開時則停止作動</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrepimport keyboardfrom time import sleepimport sys, math# child threaded script: # 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入#simExtRemoteApiStart(19999) vrep.simxFinish(-1) clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)KickBallV =360   Move_Minus =-0.1         Move_Plus =0.1n=1R_KickBallVel = (math.pi/180)*KickBallVB_KickBallVel = -(math.pi/180)*KickBallVif clientID!= -1:    print("Connected to remote server")else:    print('Connection not successful')    sys.exit('Could not connect') errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)errorCode,BRod_handle=vrep.simxGetObjectHandle(clientID,'BRod',vrep.simx_opmode_oneshot_wait)errorCode,BRev_handle=vrep.simxGetObjectHandle(clientID,'BRev',vrep.simx_opmode_oneshot_wait)errorCode,BMo_handle=vrep.simxGetObjectHandle(clientID,'BMo',vrep.simx_opmode_oneshot_wait)errorCode,RRev_handle=vrep.simxGetObjectHandle(clientID,'RRev',vrep.simx_opmode_oneshot_wait)errorCode,RMo_handle=vrep.simxGetObjectHandle(clientID,'RMo',vrep.simx_opmode_oneshot_wait)errorCode,RRod_handle=vrep.simxGetObjectHandle(clientID,'RRod',vrep.simx_opmode_oneshot_wait)if errorCode == -1:    print('Can not find left or right motor')    sys.exit()    def stop():    errorCode = vrep.simxStopSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def start():    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def pause():    errorCode = vrep.simxPauseSimulation(clientID,vrep.simx_opmode_oneshot_wait)def setting():    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    Bv =position_S[1]- position_BR[1]    BBv =position_S[0] - position_BR[0]    Rv =position_S[1]- position_RR[1]    RRv =position_RR[0]-position_S[0]def getballposition():    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)    Bv =position_S[1] - position_BR[1]    BBv =position_S[2] - position_BR[2]    Rv =position_S[1] - position_RR[1]    RRv =position_S[2] - position_RR[2]    while True:        try:            if keyboard.is_pressed('c'):                vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('v'):                vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            if keyboard.is_pressed('z'):                vrep.simxSetJointTargetVelocity(clientID,BMo_handle,0.2,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('x'):                vrep.simxSetJointTargetVelocity(clientID,BMo_handle,-0.2,vrep.simx_opmode_oneshot_wait)            else:                vrep.simxSetJointTargetVelocity(clientID,BMo_handle,0,vrep.simx_opmode_oneshot_wait)        except:            break         try:            if keyboard.is_pressed('o'):                 vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('p'):                  vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            if keyboard.is_pressed('u'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0.1,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('i'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,-0.1,vrep.simx_opmode_oneshot_wait)            else:                vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)        except:            break         MMMB = Bv*2        MMMR = Rv*2    vrep.simxSetJointTargetVelocity(clientID,BMo_handle,MMMB,vrep.simx_opmode_oneshot_wait)    vrep.simxSetJointTargetVelocity(clientID,RMo_handle,MMMR,vrep.simx_opmode_oneshot_wait)    vrep.simxSetJointTargetVelocity(clientID,BRev_handle,0,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RRev_handle,0,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)start()getballposition()stop()#vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)#vrep.simxSetJointTargetVelocity(clientID,BMo_handle,Move,vrep.simx_opmode_oneshot_wait)#vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)#vrep.simxSetJointTargetVelocity(clientID,RMo_handle,Move,vrep.simx_opmode_oneshot_wait)</pre><p><iframe width="560" height="314" src="//www.youtube.com/embed/xdWKIzcSVww" allowfullscreen="allowfullscreen"></iframe></p><p></p><h2>電腦vs電腦舊版</h2><p>由組長40623128提供</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrepfrom time import sleepimport sys, math# child threaded script: # 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入#simExtRemoteApiStart(19999) vrep.simxFinish(-1) clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)KickBallV = 45     #手把轉速設定(度/秒)Move_Minus =-0.1          #手把水平移速(m/s)Move_Plus =0.1n=1R_KickBallVel = (math.pi/180)*KickBallVB_KickBallVel = -(math.pi/180)*KickBallVif clientID!= -1:    print("Connected to remote server")else:    print('Connection not successful')    sys.exit('Could not connect') errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)errorCode,BRod_handle=vrep.simxGetObjectHandle(clientID,'BRod',vrep.simx_opmode_oneshot_wait)errorCode,BRev_handle=vrep.simxGetObjectHandle(clientID,'BRev',vrep.simx_opmode_oneshot_wait)errorCode,BMo_handle=vrep.simxGetObjectHandle(clientID,'BMo',vrep.simx_opmode_oneshot_wait)errorCode,RRev_handle=vrep.simxGetObjectHandle(clientID,'RRev',vrep.simx_opmode_oneshot_wait)errorCode,RMo_handle=vrep.simxGetObjectHandle(clientID,'RMo',vrep.simx_opmode_oneshot_wait)errorCode,RRod_handle=vrep.simxGetObjectHandle(clientID,'RRod',vrep.simx_opmode_oneshot_wait)if errorCode == -1:    print('Can not find left or right motor')    sys.exit()    def stop():    errorCode = vrep.simxStopSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def start():    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def pause():    errorCode = vrep.simxPauseSimulation(clientID,vrep.simx_opmode_oneshot_wait)def setting():    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    Bv =position_S[1]- position_BR[1]    BBv =position_S[0] - position_BR[0]    Rv =position_S[1]- position_RR[1]    RRv =position_RR[0]-position_S[0]def getballposition():    #for i in range(steps):    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)    Bv =position_S[1] - position_BR[1]    BBv =position_S[0] - position_BR[0]    Rv =position_S[1] - position_RR[1]    RRv =position_S[0] - position_RR[0]    while (n == 1):                if Bv &lt;= 0 and BBv &lt;= 0.02 and Rv&lt;=0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &lt;= 0.02 and Rv&lt;=0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &gt; 0.02 and Rv&lt;=0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &gt; 0.02 and Rv&lt;=0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &lt;= 0.02 and Rv&gt;0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &lt;= 0.02 and Rv&gt;0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &gt; 0.02 and Rv&gt;0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &gt; 0.02 and Rv&gt;0 and RRv &lt;= 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &lt;= 0.02 and Rv&lt;=0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &lt;= 0.02 and Rv&lt;=0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &gt; 0.02 and Rv&lt;=0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &gt; 0.02 and Rv&lt;=0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &lt;= 0.02 and Rv&gt;0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &lt;= 0.02 and Rv&gt;0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &lt;= 0 and BBv &gt; 0.02 and Rv&gt;0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        elif Bv &gt; 0 and BBv &gt; 0.02 and Rv&gt;0 and RRv &gt; 0.02:            errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)            Bv =position_S[1]- position_BR[1]            BBv =position_S[0] - position_BR[0]            Rv =position_S[1]- position_RR[1]            RRv =position_RR[0]-position_S[0]            vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            #print(RRv)        else:            pass        MMMB = Bv*1.2         MMMR = Rv*1.2                vrep.simxSetJointTargetVelocity(clientID,BMo_handle,MMMB,vrep.simx_opmode_oneshot_wait)        vrep.simxSetJointTargetVelocity(clientID,RMo_handle,MMMR,vrep.simx_opmode_oneshot_wait)        #print(BBv)vrep.simxSetJointTargetVelocity(clientID,BRev_handle,0,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)start()getballposition()stop()</pre><h2>電腦vs電腦新版</h2><p>由於在舊版的程式裡，會發生球滾到桿子後會造成無法回擊，因此修改完成以下程式</p><p>首先使用絕對座標找出球與球員位置的相互關係，讓球員可以跟著球移動</p><p>如果球再球員擊出後，跑到桿子後方，會出現Bug球員將無法收回</p><p>所以再程式裡加上</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">if position_S[0] &gt;= 1.185 and RRev_deg &gt;= 25:  #球進入擊球區 and 桿子擊出            if position_RR[1]&gt;=0.5:  #桿子偏右邊                speed(RMo_handle, -0.08)                sleep(0.2)                speed(RRev_handle, B_KickBallVel)                sleep(0.2)            elif position_RR[1] &lt; 0.5:  #桿子偏左邊                speed(RMo_handle, 0.08)                sleep(0.2)                speed(RRev_handle, B_KickBallVel)                sleep(0.2)</pre><p>再擊出球後能往旁邊移動收回桿子，進行下段程式。</p><p>如果球進入擊球區桿子在收回的情況下，球與球員進入x軸-0.01~0.01範圍內</p><p>則球員會將球擊出</p><p>未進入x軸-0.01~0.01範圍內時則桿子保持收回</p><p>未進入擊球範圍時桿子保持收回</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">        elif position_S[0] &gt;= 1.185 and  RRev_deg &lt;=0:  #球進入擊球區 and 桿子收回                        if Rv&gt;= -0.01 and Rv &lt;0.01:  #進入左右擊球範圍                speed(RRev_handle, R_KickBallVel)                            else:                speed(RRev_handle, B_KickBallVel)                        elif position_S[0] &lt; 1.185:  #球未進入擊球區            speed(RRev_handle,B_KickBallVel)</pre><p>完整程式碼 :</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrepfrom time import sleepimport sys, math# child threaded script: # 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入#simExtRemoteApiStart(19999) vrep.simxFinish(-1) clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)KickBallV = 45     #手把轉速設定(度/秒)Move_Minus =-0.1          #手把水平移速(m/s)Move_Plus =0.1n=1R_KickBallVel = (math.pi/180)*KickBallVB_KickBallVel = -(math.pi/180)*KickBallVif clientID!= -1:    print("Connected to remote server")else:    print('Connection not successful')    sys.exit('Could not connect') errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)errorCode,BRod_handle=vrep.simxGetObjectHandle(clientID,'BRod',vrep.simx_opmode_oneshot_wait)errorCode,BRev_handle=vrep.simxGetObjectHandle(clientID,'BRev',vrep.simx_opmode_oneshot_wait)errorCode,BMo_handle=vrep.simxGetObjectHandle(clientID,'BMo',vrep.simx_opmode_oneshot_wait)errorCode,RRev_handle=vrep.simxGetObjectHandle(clientID,'RRev',vrep.simx_opmode_oneshot_wait)errorCode,RMo_handle=vrep.simxGetObjectHandle(clientID,'RMo',vrep.simx_opmode_oneshot_wait)errorCode,RRod_handle=vrep.simxGetObjectHandle(clientID,'RRod',vrep.simx_opmode_oneshot_wait)if errorCode == -1:    print('Can not find left or right motor')    sys.exit()    def stop():    errorCode = vrep.simxStopSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def start():    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def pause():    errorCode = vrep.simxPauseSimulation(clientID,vrep.simx_opmode_oneshot_wait)def speed(handle,vel):    vrep.simxSetJointTargetVelocity(clientID,handle,vel,vrep.simx_opmode_oneshot_wait)def getballposition():    #for i in range(steps):    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,RRev_pos=vrep.simxGetJointPosition(clientID,RRev_handle,vrep.simx_opmode_streaming)    errorCode,BRev_pos=vrep.simxGetJointPosition(clientID,BRev_handle,vrep.simx_opmode_streaming)    Bv =position_S[1] - position_BR[1]    BBv =position_S[0] - position_BR[0]    Rv =position_S[1] - position_RR[1]    RRv =position_S[0] - position_RR[0]    while (n == 1):                errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)        Rv =position_S[1]- position_RR[1]        RRv =position_S[0] - position_RR[0]        Bv =position_S[1]- position_BR[1]        BRv =position_S[0] - position_BR[0]                errorCode,RRev_pos=vrep.simxGetJointPosition(clientID,RRev_handle,vrep.simx_opmode_streaming)        errorCode,BRev_pos=vrep.simxGetJointPosition(clientID,BRev_handle,vrep.simx_opmode_streaming)        RRev_deg = (RRev_pos/math.pi)*180        BRev_deg = (BRev_pos/math.pi)*180        '''        print(position_S[0])        sleep(2)        '''           if position_S[0] &gt;= 1.185 and RRev_deg &gt;= 25:  #球進入擊球區 and 桿子擊出            if position_RR[1]&gt;=0.5:  #桿子偏右邊                speed(RMo_handle, -0.08)                sleep(0.2)                speed(RRev_handle, B_KickBallVel)                sleep(0.2)                            elif position_RR[1] &lt; 0.5:  #桿子偏左邊                speed(RMo_handle, 0.08)                sleep(0.2)                speed(RRev_handle, B_KickBallVel)                sleep(0.2)                        elif position_S[0] &gt;= 1.185 and  RRev_deg &lt;=0:  #球進入擊球區 and 桿子收回                        if Rv&gt;= -0.01 and Rv &lt;0.01:  #進入左右擊球範圍                speed(RRev_handle, R_KickBallVel)                            else:                speed(RRev_handle, B_KickBallVel)                        elif position_S[0] &lt; 1.185:  #球未進入擊球區            speed(RRev_handle,B_KickBallVel)        if position_S[0] &lt;= 0 and BRev_deg &lt;= -25: #球進入擊球區 and 桿子擊出            if position_BR[1]&lt;=0.5: #桿子偏右邊                speed(BMo_handle, 0.08)                sleep(0.2)                speed(BRev_handle, R_KickBallVel)                sleep(0.2)            elif position_BR[1] &gt; 0.5: #桿子偏左邊                speed(BMo_handle, -0.08)                sleep(0.2)                speed(BRev_handle, R_KickBallVel)                sleep(0.2)                        elif position_S[0] &lt;= 0  and  BRev_deg &gt;=0:                        if Bv&gt;= -0.01 and Bv &lt;0.01:                speed(BRev_handle, B_KickBallVel)                            else:                speed(BRev_handle ,R_KickBallVel)        elif position_S[0] &gt; 0:            speed(BRev_handle,R_KickBallVel)        MMMR = Rv*1.2        MMMB = Bv*1.2        vrep.simxSetJointTargetVelocity(clientID,RMo_handle,MMMR,vrep.simx_opmode_oneshot_wait)        vrep.simxSetJointTargetVelocity(clientID,BMo_handle,MMMB,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,BRev_handle,0,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)start()getballposition()stop()</pre><p><iframe width="560" height="314" src="//www.youtube.com/embed/7c1kL1KC7c4" allowfullscreen="allowfullscreen"></iframe></p><h2>玩家vs電腦</h2><p>由電腦對打和玩家對打程式合併加以修改</p><p>完整程式碼 :</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrepimport keyboardfrom time import sleepimport sys, math# child threaded script: # 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入#simExtRemoteApiStart(19999) vrep.simxFinish(-1) clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)KickBallV = 45     #手把轉速設定(度/秒)Move_Minus =-0.1          #手把水平移速(m/s)Move_Plus =0.1n=1R_KickBallVel = (math.pi/180)*KickBallVB_KickBallVel = -(math.pi/180)*KickBallVif clientID!= -1:    print("Connected to remote server")else:    print('Connection not successful')    sys.exit('Could not connect') errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)errorCode,BRod_handle=vrep.simxGetObjectHandle(clientID,'BRod',vrep.simx_opmode_oneshot_wait)errorCode,BRev_handle=vrep.simxGetObjectHandle(clientID,'BRev',vrep.simx_opmode_oneshot_wait)errorCode,BMo_handle=vrep.simxGetObjectHandle(clientID,'BMo',vrep.simx_opmode_oneshot_wait)errorCode,RRev_handle=vrep.simxGetObjectHandle(clientID,'RRev',vrep.simx_opmode_oneshot_wait)errorCode,RMo_handle=vrep.simxGetObjectHandle(clientID,'RMo',vrep.simx_opmode_oneshot_wait)errorCode,RRod_handle=vrep.simxGetObjectHandle(clientID,'RRod',vrep.simx_opmode_oneshot_wait)if errorCode == -1:    print('Can not find left or right motor')    sys.exit()    def stop():    errorCode = vrep.simxStopSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def start():    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)    def pause():    errorCode = vrep.simxPauseSimulation(clientID,vrep.simx_opmode_oneshot_wait)def speed(handle,vel):    vrep.simxSetJointTargetVelocity(clientID,handle,vel,vrep.simx_opmode_oneshot_wait)def getballposition():    #for i in range(steps):    errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)    errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,RRev_pos=vrep.simxGetJointPosition(clientID,RRev_handle,vrep.simx_opmode_streaming)    errorCode,BRev_pos=vrep.simxGetJointPosition(clientID,BRev_handle,vrep.simx_opmode_streaming)    Bv =position_S[1] - position_BR[1]    BBv =position_S[0] - position_BR[0]    Rv =position_S[1] - position_RR[1]    RRv =position_S[0] - position_RR[0]    while (n == 1):                errorCode,position_BR=vrep.simxGetObjectPosition(clientID,BRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,position_RR=vrep.simxGetObjectPosition(clientID,RRod_handle,-1,vrep.simx_opmode_oneshot)        errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)        Rv =position_S[1]- position_RR[1]        RRv =position_S[0] - position_RR[0]        Bv =position_S[1]- position_BR[1]        BRv =position_S[0] - position_BR[0]                errorCode,RRev_pos=vrep.simxGetJointPosition(clientID,RRev_handle,vrep.simx_opmode_streaming)        errorCode,BRev_pos=vrep.simxGetJointPosition(clientID,BRev_handle,vrep.simx_opmode_streaming)        RRev_deg = (RRev_pos/math.pi)*180        BRev_deg = (BRev_pos/math.pi)*180        try:            if keyboard.is_pressed('o'):                 vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('p'):                  vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)            if keyboard.is_pressed('u'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0.1,vrep.simx_opmode_oneshot_wait)            elif keyboard.is_pressed('i'):                  vrep.simxSetJointTargetVelocity(clientID,RMo_handle,-0.1,vrep.simx_opmode_oneshot_wait)            else:                vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)        except:            break         if position_S[0] &lt;= 0 and BRev_deg &lt;= -25: #球進入擊球區 and 桿子擊出            if position_BR[1]&lt;=0.5: #桿子偏右邊                speed(BMo_handle, 0.08)                sleep(0.2)                speed(BRev_handle, R_KickBallVel)                sleep(0.2)            elif position_BR[1] &gt; 0.5: #桿子偏左邊                speed(BMo_handle, -0.08)                sleep(0.2)                speed(BRev_handle, R_KickBallVel)                sleep(0.2)                        elif position_S[0] &lt;= 0  and  BRev_deg &gt;=0:                        if Bv&gt;= -0.01 and Bv &lt;0.01:                speed(BRev_handle, B_KickBallVel)                            else:                speed(BRev_handle ,R_KickBallVel)        elif position_S[0] &gt; 0:            speed(BRev_handle,R_KickBallVel)        MMMB = Bv*2        vrep.simxSetJointTargetVelocity(clientID,BMo_handle,MMMB,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,BRev_handle,0,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)vrep.simxSetJointTargetVelocity(clientID,RMo_handle,0,vrep.simx_opmode_oneshot_wait)start()getballposition()stop()</pre><p><iframe width="560" height="314" src="//www.youtube.com/embed/C4N0UFuF-SM" allowfullscreen="allowfullscreen"></iframe></p><h2>程式除錯</h2><p><span>問題:</span></p><p>同時按下兩個鍵會造成衝突</p><p><span>解決方法 :</span></p><p>將兩桿子操作按鍵，使用try except分開寫成兩段程式</p><div><div id="highlighter_289684" class="syntaxhighlighter  py"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="py keyword">try</code><code class="py plain">:</code></div><div class="line number2 index1 alt1"><code class="py keyword">if</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'v'</code><code class="py plain">):</code></div><div class="line number3 index2 alt2"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,BRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number4 index3 alt1"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'b'</code><code class="py plain">):</code></div><div class="line number5 index4 alt2"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,BRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number6 index5 alt1"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'z'</code><code class="py plain">):</code></div><div class="line number7 index6 alt2"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,BMo_handle,</code><code class="py value">0.2</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number8 index7 alt1"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'x'</code><code class="py plain">):</code></div><div class="line number9 index8 alt2"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,BMo_handle,</code><code class="py value">0</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number10 index9 alt1"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'c'</code><code class="py plain">):</code></div><div class="line number11 index10 alt2"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,BMo_handle,</code><code class="py keyword">-</code><code class="py value">0.2</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number12 index11 alt1"><code class="py keyword">except</code><code class="py plain">:</code></div><div class="line number13 index12 alt2"><code class="py keyword">break</code></div><div class="line number14 index13 alt1"><code class="py keyword">try</code><code class="py plain">:</code></div><div class="line number15 index14 alt2"><code class="py keyword">if</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'o'</code><code class="py plain">): </code></div><div class="line number16 index15 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RRev_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number17 index16 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'p'</code><code class="py plain">): </code></div><div class="line number18 index17 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RRev_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number19 index18 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'y'</code><code class="py plain">): </code></div><div class="line number20 index19 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0.2</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number21 index20 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'u'</code><code class="py plain">): </code></div><div class="line number22 index21 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number23 index22 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'i'</code><code class="py plain">): </code></div><div class="line number24 index23 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py keyword">-</code><code class="py value">0.2</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number25 index24 alt2"><code class="py keyword">except</code><code class="py plain">:</code></div><div class="line number26 index25 alt1"><code class="py keyword">break</code></div></div></td></tr></tbody></table></div></div><h2>程式優化</h2><p><span>問題:</span></p><p>操作按鍵過多，導致控制困難</p><p><span>解決方法 :</span></p><p>取消暫停鍵</p><p>改成按下按鍵作動 放開則停止</p><p>修改前 :</p><div><div id="highlighter_67414" class="syntaxhighlighter  py"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter" style="width: 24.4444px;"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code" style="width: 686.667px;"><div class="container"><div class="line number1 index0 alt2"><code class="py keyword">if</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'y'</code><code class="py plain">): </code><code class="py comments">#桿子向左移</code></div><div class="line number2 index1 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0.1</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number3 index2 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'u'</code><code class="py plain">): </code><code class="py comments">#桿子停止作動</code></div><div class="line number4 index3 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number5 index4 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'i'</code><code class="py plain">): </code><code class="py comments">#桿子向右移</code></div><div class="line number6 index5 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py keyword">-</code><code class="py value">0.1</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div></div></td></tr></tbody></table></div></div><p><br><br>修改後 :</p><p></p><div><div id="highlighter_230278" class="syntaxhighlighter  py"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="py keyword">if</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'u'</code><code class="py plain">): </code><code class="py comments">#桿子向左移</code></div><div class="line number2 index1 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0.1</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number3 index2 alt2"><code class="py keyword">elif</code> <code class="py plain">keyboard.is_pressed(</code><code class="py string">'i'</code><code class="py plain">): </code><code class="py comments">#桿子向右移</code></div><div class="line number4 index3 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py keyword">-</code><code class="py value">0.1</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div><div class="line number5 index4 alt2"><code class="py keyword">else</code><code class="py plain">:</code></div><div class="line number6 index5 alt1"><code class="py plain">vrep.simxSetJointTargetVelocity(clientID,RMo_handle,</code><code class="py value">0</code><code class="py plain">,vrep.simx_opmode_oneshot_wait)</code></div></div></td></tr></tbody></table></div></div><p></p><h1>Vrep</h1><h2>Vrep模擬程式</h2><p><iframe width="560" height="314" src="//www.youtube.com/embed/hfjEEXyzla0?t=3s" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/NSKYthBHlPk" allowfullscreen="allowfullscreen"></iframe></p><h2>Vrep簡化</h2><p><iframe width="560" height="314" src="//www.youtube.com/embed/bZ_AHw-SSFU" allowfullscreen="allowfullscreen"></iframe></p><h1>Onshape</h1><p>手足球最初版</p><p>但因為和國際尺寸不符在期末報告中並未採用</p><p><img src="/images/未命名.png" width="1000" height="447" alt=""></p><p><img src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/images/%E5%A0%B4%E5%9C%B0.PNG" width="1000" height="476"></p><p></p><h1>心得</h1><h1>期末影片</h1><h1>期中</h1><h3>CMSimfly 網站</h3><p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p><h3>reveal 投影片</h3><p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p><h3>pelican 網誌</h3><p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo&nbsp;</p><p>各分組必須自行更改&nbsp;@edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p><p>更改 @edit publishconf.py 中的 SITEURL</p><h2>課程作業心得</h2><h3>Week1</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/ax2ZuPm3YXc" allowfullscreen="allowfullscreen"></iframe></p><p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">利用 p37 中的 git 建立個人的 Github Pages 網站</yt-formatted-string></p><p>這次課程使用github新功能<span style="background-color: #ffffff;"><a href="https://classroom.github.com/" style="background-color: #ffffff;">Github Classroom</a>讓課程管理更加方便&nbsp; &nbsp; &nbsp;</span></p><p>課程心得</p><p>這學期也是使用github，所以使用起來並不陌生，github的新功能Github Classroom讓領取作業和交作業管理起來更加方便。</p><h3>Week2</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/hEkMv2KqixY" allowfullscreen="allowfullscreen"></iframe></p><p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">說明如何以 ShareX 取圖, 及如何管理 CMSimfly 作業倉儲.</yt-formatted-string></p><p class="title style-scope ytd-video-primary-info-renderer"><span>開始</span>使用<a href="https://www.onshape.com/">Onshape</a>&nbsp;進行繪圖練習</p><p>課程心得</p><p>今天上課學習如何使用Share X取圖，以及學習如何管理作業倉儲網站和投影片內容，每週更新上課進度即心得，平時多做一點，到期中考前會比較輕鬆。</p><h3>Week3</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/158Ir6Mni60" allowfullscreen="allowfullscreen"></iframe></p><p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">git 基本操作練習</yt-formatted-string><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">學習</yt-formatted-string></p><p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>git branch&nbsp; 分支</span></yt-formatted-string></p><p><span><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">git checkout&nbsp; 切換分支</yt-formatted-string></span></p><p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>git log --oneline --graph --all 印出你的提交歷史, 顯示你的分支指標在哪裡, 以及歷</span></yt-formatted-string><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;史如何被分離開來</span></yt-formatted-string><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>&nbsp; &nbsp; &nbsp; </span></yt-formatted-string></p><p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>git merge&nbsp; &nbsp;合併分支</span></yt-formatted-string><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span>&nbsp; &nbsp; &nbsp; &nbsp;</span></yt-formatted-string></p><p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span> git commit -m ''</span></yt-formatted-string>提交</p><p><span>開始</span>使用<a href="https://www.onshape.com/">Onshape</a>&nbsp;進行繪圖練習</p><p>課程心得</p><p>今天學習github基本操作練習，有些比較熟悉的算是複習吧，也學到新的git log --oneline --graph --all、 git merge，以前都沒有用過的指令，跟著操作一次還是有點陌生，看來要常常練習熟悉每一個指令。</p><section class="post-info"><div class="post-share"></div></section><h3>Week4</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/UdYcuRKS6o4" allowfullscreen="allowfullscreen"></iframe></p><p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">Onshape week1 課程使用</yt-formatted-string><span style="background-color: #ffffff; color: #626262;">說明</span></p><p class="title style-scope ytd-video-primary-info-renderer">在onshape遇到困難的單字要學著用<a href="https://www.merriam-webster.com/">英英字典</a></p><p>課程心得</p><p>這週正式進入Onshape繪圖練習，因為跟之前學的繪圖程式快捷鍵很多都不太一樣，介面也不一樣，所以操作起來有點不習慣，不過Onshpe邊畫邊儲存我覺得很不錯，不會像之前考試一個當機什麼都沒有了。</p><h3>Week5</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/GE48pZWK8vI" allowfullscreen="allowfullscreen"></iframe></p><p><iframe width="560" height="314" src="//www.youtube.com/embed/5_Y1SUTpaVI" allowfullscreen="allowfullscreen"></iframe></p><p>課程心得</p><p>這週進入Onshape第二週練習，逐漸開始習慣介面，開始必須要了解到自己的設計意圖是什麼，還有設定尺寸以及如何去約束他，並且要正確和精準。</p><h3>Week6</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/mH_tW3erBqs" allowfullscreen="allowfullscreen"></iframe></p><p><iframe width="560" height="314" src="//www.youtube.com/embed/i0zDhlxAJmk" allowfullscreen="allowfullscreen"></iframe></p><p>課程心得</p><p>今天在更新部落格時，發現推上去部落格打不開，才知道原來很多人都有一樣的問題，不斷的用git reset回退版本，在推上去還是沒有改善，經過討論才知道.md的檔案改了檔名會發生問題，幸好有救回來。</p><h3>Week7</h3><p>課程影片</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/JA75HIMhIgk" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/nju615KXghM" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/hCyeqgfh02w" allowfullscreen="allowfullscreen"></iframe></p><h3>Week8</h3><p>期中考週<span></span></p><h3>Week9</h3><p><span>進行期末專案分組：</span></p><p><span>六人一組</span></p><p><span>學號對應帳號登入 Github</span></p><p><span>根據 github classroom 期末專案倉儲連結，</span><span>依序加入各對應組別</span></p><p><span></span></p><p><span>期末分組專題重點：</span></p><p><span>各組選定一個多零件機電資整合專題題目</span></p><p><span>以協同寫作方式利用&nbsp;</span><a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a>、<a href="https://revealjs.com/" rel="nofollow">Reveal.js</a><span>&nbsp;與&nbsp;</span><a href="https://blog.getpelican.com/" rel="nofollow">Pelican Blog</a><span>&nbsp;完成專案規劃、內容管理、簡報及網誌內容</span><span>各組以協同流程</span></p><p><span>在&nbsp;</span><a href="https://www.onshape.com/" rel="nofollow">Onshape</a><span>&nbsp;上完成零組件設計</span><span>機械零組件設計與分析運算 - 採用&nbsp;</span><a href="http://flask.pocoo.org/" rel="nofollow">Flask</a><span>&nbsp;網際與&nbsp;</span><a href="https://www.riverbankcomputing.com/software/pyqt/download5" rel="nofollow">PyQt5</a><span>&nbsp;程式建構輔助運算模組或系統</span><span>電路與控制程式設計 - 採用&nbsp;</span><a href="https://www.arduino.cc/" rel="nofollow">Arduino</a><span>&nbsp;與&nbsp;</span><a href="https://www.tinkercad.com/" rel="nofollow">Tinkercad</a><span>&nbsp;完成</span><span>多零件機電整合系統模擬 - 採用&nbsp;</span><a href="http://www.coppeliarobotics.com/" rel="nofollow">V-rep</a><span>&nbsp;結合&nbsp;</span><a href="http://mde.tw/vecp2018/lua/SchoolProject/" rel="nofollow">Lua</a><span>&nbsp;或&nbsp;</span><a href="http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm" rel="nofollow">Remote API Python</a><span>&nbsp;程式完成</span><span>(選項) 以 3D 列印零組件完成專題實作</span></p><h3>Week10</h3><p><span>我們小組在課堂上討論本次專題，以投票的方式決定出主題為行走機構，並利用Onshape畫出本次專題的主體</span></p><h3>Week11</h3><p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">分組期末專案範例說明</yt-formatted-string></p><p class="title style-scope ytd-video-primary-info-renderer"><iframe width="560" height="314" src="//www.youtube.com/embed/Ui_8E4fIzXE" allowfullscreen="allowfullscreen"></iframe></p><p>將 Onshape 中的零組件輸入 V-rep 進行動態模擬</p><ul><li><p>將組立完成的零組件, 以 STL 格式轉出</p></li><li><p>將 STL 組件輸入 V-rep 後, 將零組拆解</p></li><li><p>根據零件運動軸進行設定</p></li><li><p>以 Lua 嵌入或 Python remote API 方式驅動各致動器進行模擬</p></li></ul><h3>Week14</h3><p><iframe width="560" height="314" src="//www.youtube.com/embed/2833erZxUAM" allowfullscreen="allowfullscreen"></iframe></p><p><span>說明如何利用 MikTeX 與 Pandoc, 以非同步協同編輯的流程建立各組的專案報告</span></p><p><span>說明頁面: </span><a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/redirect?redir_token=4pE72FlO4My36dmgdpsUA9hrCE98MTU0NzIwOTY3NUAxNTQ3MTIzMjc1&amp;v=2833erZxUAM&amp;q=https%3A%2F%2Fmdecp2018.github.io%2Ffinalproject-bgx%2Fcontent%2FLeo-editor.html&amp;event=video_description" rel="nofollow">https://mdecp2018.github.io/finalproj...</a><span> </span></p><p><span>可攜 MikTeX 與 Pandoc: </span><a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/redirect?redir_token=4pE72FlO4My36dmgdpsUA9hrCE98MTU0NzIwOTY3NUAxNTQ3MTIzMjc1&amp;v=2833erZxUAM&amp;q=https%3A%2F%2Fdrive.google.com%2Fopen%3Fid%3D1lH3J-EETOpNruAz86Mi8A4PcKkgJOsh2&amp;event=video_description" rel="nofollow">https://drive.google.com/open?id=1lH3...</a><span> </span></p><p><span>協同報告倉儲: </span><a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/redirect?redir_token=4pE72FlO4My36dmgdpsUA9hrCE98MTU0NzIwOTY3NUAxNTQ3MTIzMjc1&amp;v=2833erZxUAM&amp;q=https%3A%2F%2Fgithub.com%2Fmdecourse%2Fkmolreport&amp;event=video_description" rel="nofollow">https://github.com/mdecourse/kmolreport</a></p><h3>Week15</h3><p><iframe width="560" height="314" src="//www.youtube.com/embed/DoiiDLpwBcQ" allowfullscreen="allowfullscreen"></iframe></p><p><span>說明如何將 MCAD 設計繪圖零組件轉進 V-rep, 並設定 IK 運算</span></p><p><span>V-rep Tutorial: </span><a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/redirect?q=http%3A%2F%2Fwww.coppeliarobotics.com%2FhelpFiles%2Fen%2FinverseKinematicsTutorial.htm&amp;event=video_description&amp;redir_token=XWEZ4BSrRjWaDm6k_BEk-8bZsvx8MTU0NzIwOTc0NkAxNTQ3MTIzMzQ2&amp;v=DoiiDLpwBcQ" rel="nofollow">http://www.coppeliarobotics.com/helpF...</a><span> Solvespace two-link </span></p><p><span>IK 範例: </span><a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/redirect?q=https%3A%2F%2Fmdecp2018.github.io%2Ffinalproject-bgx%2Fdownloads%2Ftwo_links_ik.7z&amp;event=video_description&amp;redir_token=XWEZ4BSrRjWaDm6k_BEk-8bZsvx8MTU0NzIwOTc0NkAxNTQ3MTIzMzQ2&amp;v=DoiiDLpwBcQ" rel="nofollow">https://mdecp2018.github.io/finalproj...</a></p><h2>Onshape練習</h2><p><span style="background-color: #ffffff;">網站&nbsp; &nbsp;<a href="https://www.onshape.com/" style="background-color: #ffffff;">Onshape</a></span></p><p><iframe width="560" height="314" src="//www.youtube.com/embed/e3enP2dWfrA" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/66oWvEMlEik?t=271s" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/rMcYxyKKdxs?t=1143s" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/ahZrFbxd7BI?t=889s" allowfullscreen="allowfullscreen"></iframe><iframe width="560" height="314" src="//www.youtube.com/embed/LSaNTUs2Khs" allowfullscreen="allowfullscreen"></iframe></p><p><iframe width="796" height="314" src="//www.youtube.com/embed/kNOaPV25CYY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe></p><p><iframe width="796" height="314" src="//www.youtube.com/embed/w8yLdx97kKQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe></p><h2>筆記</h2><p><img src="/images/8119.jpg" width="300" height="222" alt=""><img src="/images/8120.jpg" width="300" height="225" alt=""><img src="/images/8120.jpg" width="300" height="225" alt="" style="background-color: #ffffff; color: #626262;"><img src="/images/8122.jpg" width="300" height="225" alt=""><img src="/images/8123.jpg" width="300" height="225" alt=""><img src="/images/8124.jpg" width="300" height="225" alt="" style="background-color: #ffffff; color: #626262;"><img src="/images/8125.jpg" width="300" height="225" alt=""><img src="/images/8126.jpg" width="300" height="225" alt=""></p><h2>Python 手冊</h2><p>計算機程式教材:&nbsp;&nbsp;<a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a>&nbsp;</p><p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p><h2>OnShape 手冊</h2><p><a href="https://www.onshape.com/">https://www.onshape.com/</a>&nbsp;</p><p>電腦輔助設計實習課程教材:&nbsp;<a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a>&nbsp;</p><h2>Fusion 360</h2><p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a>&nbsp;</p>